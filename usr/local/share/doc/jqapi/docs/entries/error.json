{"name":"error","type":"method","title":".error()","deprecated":"1.8","removed":null,"desc":"Bind an event handler to the \"error\" JavaScript event.","categories":["events/browser-events","version/1.0","version/1.4.3","deprecated/deprecated-1.8"],"entries":[{"return":"jQuery","signatures":[{"added":"1.0","argument":{"desc":"A function to execute when the event is triggered.","name":"handler(eventObject)","type":"Function"}},{"added":"1.4.3","argument":[{"desc":"An object containing data that will be passed to the event handler.","name":"eventData","type":"Object","optional":"true"},{"desc":"A function to execute each time the event is triggered.","name":"handler(eventObject)","type":"Function"}]}],"examples":{"desc":"To hide the \"broken image\" icons for IE users, you can try:","code":"\n$( \"img\" )\n  .error(function() {\n    $( this ).hide();\n  })\n  .attr( \"src\", \"missing.png\" );\n"},"longdesc":"\n    <p>This method is a shortcut for <code>.on( \"error\", handler )</code>.</p>\n    <p>The <code>error</code> event is sent to elements, such as images, that are referenced by a document and loaded by the browser. It is called if the element was not loaded correctly.</p>\n    <p>For example, consider a page with a simple image element:</p>\n    <pre><code>\n&lt;img alt=\"Book\" id=\"book\"&gt;\n    </code></pre>\n    <p>The event handler can be bound to the image:</p>\n    <pre><code>\n$( \"#book\" )\n  .error(function() {\n    alert( \"Handler for .error() called.\" )\n  })\n  .attr( \"src\", \"missing.png\" );\n    </code></pre>\n    <p>If the image cannot be loaded (for example, because it is not present at the supplied URL), the alert  is displayed:</p>\n    <p>\n      <samp>Handler for .error() called.</samp>\n    </p>\n    <div class=\"warning\">\n      <p>The event handler <em>must</em> be attached before the browser fires the error event, which is why the example sets the src attribute after attaching the handler. Also, the error event may not be correctly fired when the page is served locally; <code>error</code> relies on HTTP status codes and will generally not be triggered if the URL uses the <code>file:</code> protocol.</p>\n    </div>\n    <p>Note: A jQuery error event handler should not be attached to the window object. The browser fires the window's error event when a script error occurs. However, the window error event receives different arguments and has different return value requirements than conventional event handlers. Use <code>window.onerror</code> instead.</p>\n  "}]}